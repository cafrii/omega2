'''
4811번
알약 성공, 골드5

시간 제한	메모리 제한	제출	정답	맞힌 사람	정답 비율
1 초	256 MB	9810	6616	5085	69.524%

문제
70세 박종수 할아버지는 매일 매일 약 반알을 먹는다.
손녀 선영이는 종수 할아버지에게 약이 N개 담긴 병을 선물로 주었다.

첫째 날에 종수는 병에서 약 하나를 꺼낸다.
그 다음, 그 약을 반으로 쪼개서 한 조각은 먹고, 다른 조각은 다시 병에 넣는다.

다음 날부터 종수는 병에서 약을 하나 꺼낸다. (약은 한 조각 전체 일 수도 있고, 쪼갠 반 조각 일 수도 있다)
반 조각이라면 그 약을 먹고, 아니라면 반을 쪼개서 한 조각을 먹고, 다른 조각은 다시 병에 넣는다.

종수는 손녀에게 한 조각을 꺼낸 날에는 W를, 반 조각을 꺼낸 날에는 H 보낸다.
손녀는 할아버지에게 받은 문자를 종이에 기록해 놓는다.
총 2N일이 지나면 길이가 2N인 문자열이 만들어지게 된다.
이때, 가능한 서로 다른 문자열의 개수는 총 몇 개일까?

입력
입력은 최대 1000개의 테스트 케이스로 이루어져 있다.
각 테스트 케이스는 한 줄이며, 병에 들어있는 약의 개수 N ≤ 30 가 주어진다.

입력의 마지막 줄에는 0이 하나 주어진다.

출력
각 테스트 케이스에 대해서 가능한 문자열의 개수를 출력한다.


--------
10:42~12:05


--------

시도했던 여러가지 풀이 시도.

경우의 수 직접 세어 보면서 규칙 찾기

1: WH  1가지
2: WWHH, WHWH  2가지
3: WWWHHH, WWHWHH, WWHHWH, ..  5가지. 3+2
4:  4+3+2+5 = 14
...

        0  1  2  3 -> W
    0  *  *  *  *
    1     *  *  *
    2        *  *
H   3           *

        0  1  2  3  4 -> W
    0  *  *  *  *  *
    1     *  *  *  *
    2        *  *  *
    3           *  *
H   4              *

        0  1  2  3  4  5 -> W
    0  *  *  *  *  *  *
    1     *  *  *  *  *
    2        *  *  *  *
    3           *  *  *
    4              *  *
    5                 *

규칙을 찾지 못함.
그냥 순수하게 dp 로만 다시 사고.

병 안에서 W와 H가 존재한다고 가정하고, 경우의 수를 계산.

------

구현 후 검증 완료.


'''



import sys

def log(fmt, *args): print(fmt % args, file=sys.stderr)

def get_input():
    input = sys.stdin.readline
    A = []
    for i in range(1000):
        n = int(input().rstrip())
        if n == 0: break
        A.append(n)
    return A,

def solve(N:int)->int:
    '''
    Logic:
        N개의 W와 N개의 H를 나열하는 방법의 수에서, 출력된 H개수가 W개수를 넘을 수 없는 조건이 있음.
        총 2N개의 자리를 채우는 경우
        맨 앞은 항상 W. -> 2N-1개를 채우는 경우의 수가 됨. W N-1개, H N개

        dp[w][h] =  # h >= w
            dp[w-1][h] if w == h else
            dp[w-1][h] + dp[w][h-1]

    '''

    dp = [ [0]*(N+1) for _ in range(N+1) ]
    # dp[w][h]는 병 안에 W 와 H 가 각각 w, h 개가 있을 때 꺼내는 방법의 수

    # H만 병 안에 있으면 경우의 수는 1가지 뿐.
    for h in range(1, N+1):
        dp[0][h] = 1

    for w in range(1, N+1):
        for h in range(w, N+1):

            dp[w][h] = ( # h >= w
                dp[w-1][h] if w == h else
                dp[w-1][h] + dp[w][h-1]
            )

    return dp[N][N]

if __name__ == '__main__':
    A, = get_input()
    for n in A:
        print(solve(n))


'''
예제 입력 1
6
1
4
2
3
30
0
예제 출력 1
132
1
14
2
5
3814986502092304

----
run=(python3 a4811.py)

echo '6\n1\n4\n2\n3\n30\n0' | $run
# 132
# 1
# 14
# 2
# 5
# 3814986502092304



'''
