'''
9084번
동전 성공, 골드5

시간 제한	메모리 제한	제출	정답	맞힌 사람	정답 비율
1 초	128 MB	17852	11973	9718	68.053%

문제
우리나라 화폐단위, 특히 동전에는 1원, 5원, 10원, 50원, 100원, 500원이 있다.
이 동전들로는 정수의 금액을 만들 수 있으며 그 방법도 여러 가지가 있을 수 있다.
예를 들어, 30원을 만들기 위해서는 1원짜리 30개 또는 10원짜리 2개와 5원짜리 2개 등의 방법이 가능하다.

동전의 종류가 주어질 때에 주어진 금액을 만드는 모든 방법을 세는 프로그램을 작성하시오.

입력
입력의 첫 줄에는 테스트 케이스의 개수 T(1 ≤ T ≤ 10)가 주어진다.
각 테스트 케이스의 첫 번째 줄에는 동전의 가지 수 N(1 ≤ N ≤ 20)이 주어지고
두 번째 줄에는 N가지 동전의 각 금액이 오름차순으로 정렬되어 주어진다.
각 금액은 정수로서 1원부터 10000원까지 있을 수 있으며 공백으로 구분된다.
세 번째 줄에는 주어진 N가지 동전으로 만들어야 할 금액 M(1 ≤ M ≤ 10000)이 주어진다.

편의를 위해 방법의 수는 231 - 1 보다 작고, 같은 동전이 여러 번 주어지는 경우는 없다.

출력
각 테스트 케이스에 대해 입력으로 주어지는 N가지 동전으로 금액 M을 만드는 모든 방법의 수를
한 줄에 하나씩 출력한다.

----

10:57~11:08

----

유사 문제:
- 2294, 동전 2, 골드5 - K를 만드는데 사용한 동전의 최소 개수
- 2293, 동전 1, 골드4 - 특정 금액 만드는 경우의 수 구하기
이번 문제 9084 는 2293의 멀티 TC 형태. 그런데 난이도는 골드5로 더 낮음

----
9/25, 제출 후 검증 확인.


'''


import sys

def log(fmt, *args): print(fmt % args, file=sys.stderr)

def get_input():
    input = sys.stdin.readline
    TC = int(input().rstrip())
    A = []
    for _ in range(TC):
        N = int(input().rstrip())
        Ns = list(map(int, input().split()))
        assert len(Ns) == N
        M = int(input().rstrip())
        A.append((Ns, M))
    return A

def solve(Ns:list[int], M:int)->int:
    '''
    Args:
        Ns: 사용할 수 있는 동전의 종류 목록
        M: 만들어야 하는 목표 금액.
    Returns:
        Ns 동전들로 M원을 만드는 방법의 수
    '''

    dp = [0] * (M+1)
    # dp[k] 는 k 원을 만드는 방법의 수
    dp[0] = 1

    for p in Ns:
        # p 는 현재 동전의 가치 (price). p는 1~10000
        # p원의 가치를 추가하는 경우를 고려함.
        for k in range(p, M+1):
            if dp[k-p] > 0:
                dp[k] += dp[k - p]

    return dp[M]


if __name__ == '__main__':
    # r = get_input()
    # for ns,m in r:
    #     print(solve(ns,m))

    print('\n'.join(map(str, (solve(ns,m) for ns,m in get_input()))))



'''
예제 입력 1
3
2
1 2
1000
3
1 5 10
100
2
5 7
22
예제 출력 1
501
121
1

----
run=(python3 a9084.py)

echo '3\n2\n1 2\n1000\n3\n1 5 10\n100\n2\n5 7\n22' | $run
# 501 121 1



'''

