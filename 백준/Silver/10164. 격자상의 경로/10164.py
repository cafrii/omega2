'''
10164번

격자상의 경로

시간 제한	메모리 제한	제출	정답	맞힌 사람	정답 비율
1 초	256 MB	19898	7512	5886	37.825%

문제

행의 수가 N이고 열의 수가 M인 격자의 각 칸에 1부터 N×M까지의 번호가 첫 행부터 시작하여 차례로 부여되어 있다.
격자의 어떤 칸은 ○ 표시가 되어 있다. (단, 1번 칸과 N × M번 칸은 ○ 표시가 되어 있지 않다.
또한, ○ 표시가 되어 있는 칸은 최대 한 개이다. 즉, ○ 표시가 된 칸이 없을 수도 있다.)

행의 수가 3이고 열의 수가 5인 격자에서 각 칸에 번호가 1부터 차례대로 부여된 예가 아래에 있다.
이 격자에서는 8번 칸에 ○ 표시가 되어 있다.

격자의 1번 칸에서 출발한 어떤 로봇이 아래의 두 조건을 만족하면서 N×M번 칸으로 가고자 한다.

조건 1: 로봇은 한 번에 오른쪽에 인접한 칸 또는 아래에 인접한 칸으로만 이동할 수 있다. (즉, 대각선 방향으로는 이동할 수 없다.)
조건 2: 격자에 ○로 표시된 칸이 있는 경우엔 로봇은 그 칸을 반드시 지나가야 한다.
위에서 보인 것과 같은 격자가 주어질 때, 로봇이 이동할 수 있는 서로 다른 경로의 두 가지 예가 아래에 있다.

1 → 2 → 3 → 8 → 9 → 10 → 15
1 → 2 → 3 → 8 → 13 → 14 → 15

격자에 관한 정보가 주어질 때 로봇이 앞에서 설명한 두 조건을 만족하면서 이동할 수 있는
서로 다른 경로가 총 몇 개나 되는지 찾는 프로그램을 작성하라.

입력
입력의 첫째 줄에는 격자의 행의 수와 열의 수를 나타내는 두 정수 N과 M(1 ≤ N, M ≤ 15),
그리고 ○로 표시된 칸의 번호를 나타내는 정수 K(K=0 또는 1 < K < N×M)가 차례로 주어지며, 각 값은 공백으로 구분된다.
K의 값이 0인 경우도 있는데, 이는 ○로 표시된 칸이 없음을 의미한다. N과 M이 동시에 1인 경우는 없다.

출력
주어진 격자의 정보를 이용하여 설명한 조건을 만족하는 서로 다른 경로의 수를 계산하여 출력해야 한다.

서브태스크
번호	배점	제한
1	9	1 ≤ N, M ≤ 5, K = 0
2	24	1 ≤ N, M ≤ 5, 1 < K < N × M
3	23	1 ≤ N, M ≤ 15, K = 0
4	44	원래의 제약조건 이외에 아무 제약조건이 없다.

---------

10:12~10:26

'''

def factorial(n):
    return n*factorial(n-1) if n>1 else 1

def solve(N, M):
    n,m = N-1,M-1
    # 우측으로 n 회, 아래로 m 회의 조합의 수
    #     uuu..u ddd..d
    # (n+m)! / n! / m!
    return factorial(n+m)//factorial(n)//factorial(m)


N,M,K = map(int, input().split())

if K == 0:
    print(solve(N, M))
else:
    r,c = (K-1)//M,(K-1)%M
    print(solve(r+1, c+1) * solve(N-r, M-c))


'''
예제 입력 1
3 5 8
예제 출력 1
9

예제 입력 2
7 11 0
예제 출력 2
8008

예제 입력 3
7 11 76
예제 출력 3
5005

'''



